# serverless.yml
service: freestyle-skills-index

provider:
  name: aws
  runtime: nodejs14.x
  region: us-west-2
  stage: ${opt:stage, "development"}
  lambdaHashingVersion: "20201221"

  environment:
    RESULTS_TABLE: ${self:service}-${self:provider.stage}-ResultsTable
    LEADERBOARD_TABLE: ${self:service}-${self:provider.stage}-LeaderboardTable
    DEPLOY_BUCKET: ${self:service}-${self:provider.stage}-deploy-bucket

  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
            - dynamodb:BatchGetItem
            - dynamodb:BatchWriteItem
          Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.RESULTS_TABLE}"
        - Effect: Allow
          Action:
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
            - dynamodb:BatchGetItem
            - dynamodb:BatchWriteItem
          Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.LEADERBOARD_TABLE}"

functions:
  sendResults:
    handler: source/main.sendResults
    events:
      - http:
          path: sendResults
          method: post
          cors: true
  getLeaderboard:
    handler: source/main.getLeaderboard
    events:
      - http:
          path: getLeaderboard
          method: get
          cors: true
  recalculateScores:
    handler: source/main.recalculateScores
    events:
      - http:
          path: recalculateScores
          method: post
          cors: true

resources:
  Resources:
    testTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.environment.RESULTS_TABLE}
        AttributeDefinitions:
          - AttributeName: username
            AttributeType: S
          - AttributeName: timestamp
            AttributeType: S
        KeySchema:
          - AttributeName: username
            KeyType: HASH
          - AttributeName: timestamp
            KeyType: RANGE
        BillingMode: PAY_PER_REQUEST
    leaderboardTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.environment.LEADERBOARD_TABLE}
        AttributeDefinitions:
          - AttributeName: key
            AttributeType: S
        KeySchema:
          - AttributeName: key
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
    deployBucket:
      Type: AWS::S3::Bucket
      Properties:
        AccessControl: Private
        BucketName: ${self:provider.environment.DEPLOY_BUCKET}
